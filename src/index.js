/**
 * ProIn.WebApi
 * This is a ProIn data access WebApi
 *
 * OpenAPI spec version: 1.0.0
 * Contact: zwq00000@hotmail.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import CpSpec from './model/CpSpec';
import Error from './model/Error';
import LoginInfo from './model/LoginInfo';
import MeasureRecord from './model/MeasureRecord';
import MeasureValue from './model/MeasureValue';
import ModelStateDictionary from './model/ModelStateDictionary';
import PagedTaskSessions from './model/PagedTaskSessions';
import PagedUsers from './model/PagedUsers';
import PagedWorkpieces from './model/PagedWorkpieces';
import Paging from './model/Paging';
import TaskSession from './model/TaskSession';
import User from './model/User';
import UserInfo from './model/UserInfo';
import Workpiece from './model/Workpiece';
import Workpieces from './model/Workpieces';
import AccountApi from './api/AccountApi';
import CpSpecApi from './api/CpSpecApi';
import MeasureValueApi from './api/MeasureValueApi';
import TaskSessionApi from './api/TaskSessionApi';
import UserApi from './api/UserApi';
import WorkpieceApi from './api/WorkpieceApi';
import WorkpieceViewApi from './api/WorkpieceViewApi';


/**
* This_is_a_ProIn_data_access_WebApi.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var ProinApi = require('index'); // See note below*.
* var xxxSvc = new ProinApi.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new ProinApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new ProinApi.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new ProinApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 1.0.0
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The CpSpec model constructor.
     * @property {module:model/CpSpec}
     */
    CpSpec,

    /**
     * The Error model constructor.
     * @property {module:model/Error}
     */
    Error,

    /**
     * The LoginInfo model constructor.
     * @property {module:model/LoginInfo}
     */
    LoginInfo,

    /**
     * The MeasureRecord model constructor.
     * @property {module:model/MeasureRecord}
     */
    MeasureRecord,

    /**
     * The MeasureValue model constructor.
     * @property {module:model/MeasureValue}
     */
    MeasureValue,

    /**
     * The ModelStateDictionary model constructor.
     * @property {module:model/ModelStateDictionary}
     */
    ModelStateDictionary,

    /**
     * The PagedTaskSessions model constructor.
     * @property {module:model/PagedTaskSessions}
     */
    PagedTaskSessions,

    /**
     * The PagedUsers model constructor.
     * @property {module:model/PagedUsers}
     */
    PagedUsers,

    /**
     * The PagedWorkpieces model constructor.
     * @property {module:model/PagedWorkpieces}
     */
    PagedWorkpieces,

    /**
     * The Paging model constructor.
     * @property {module:model/Paging}
     */
    Paging,

    /**
     * The TaskSession model constructor.
     * @property {module:model/TaskSession}
     */
    TaskSession,

    /**
     * The User model constructor.
     * @property {module:model/User}
     */
    User,

    /**
     * The UserInfo model constructor.
     * @property {module:model/UserInfo}
     */
    UserInfo,

    /**
     * The Workpiece model constructor.
     * @property {module:model/Workpiece}
     */
    Workpiece,

    /**
     * The Workpieces model constructor.
     * @property {module:model/Workpieces}
     */
    Workpieces,

    /**
    * The AccountApi service constructor.
    * @property {module:api/AccountApi}
    */
    AccountApi,

    /**
    * The CpSpecApi service constructor.
    * @property {module:api/CpSpecApi}
    */
    CpSpecApi,

    /**
    * The MeasureValueApi service constructor.
    * @property {module:api/MeasureValueApi}
    */
    MeasureValueApi,

    /**
    * The TaskSessionApi service constructor.
    * @property {module:api/TaskSessionApi}
    */
    TaskSessionApi,

    /**
    * The UserApi service constructor.
    * @property {module:api/UserApi}
    */
    UserApi,

    /**
    * The WorkpieceApi service constructor.
    * @property {module:api/WorkpieceApi}
    */
    WorkpieceApi,

    /**
    * The WorkpieceViewApi service constructor.
    * @property {module:api/WorkpieceViewApi}
    */
    WorkpieceViewApi
};
