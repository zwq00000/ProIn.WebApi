/**
 * ProIn.WebApi
 * This is a ProIn data access WebApi
 *
 * OpenAPI spec version: 1.0.0
 * Contact: zwq00000@hotmail.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.ProinApi);
  }
}(this, function(expect, ProinApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new ProinApi.CpSpec();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('CpSpec', function() {
    it('should create an instance of CpSpec', function() {
      // uncomment below and update the code to test CpSpec
      //var instane = new ProinApi.CpSpec();
      //expect(instance).to.be.a(ProinApi.CpSpec);
    });

    it('should have the property specId (base name: "SpecId")', function() {
      // uncomment below and update the code to test the property specId
      //var instane = new ProinApi.CpSpec();
      //expect(instance).to.be();
    });

    it('should have the property orderNo (base name: "OrderNo")', function() {
      // uncomment below and update the code to test the property orderNo
      //var instane = new ProinApi.CpSpec();
      //expect(instance).to.be();
    });

    it('should have the property specName (base name: "SpecName")', function() {
      // uncomment below and update the code to test the property specName
      //var instane = new ProinApi.CpSpec();
      //expect(instance).to.be();
    });

    it('should have the property partId (base name: "PartId")', function() {
      // uncomment below and update the code to test the property partId
      //var instane = new ProinApi.CpSpec();
      //expect(instance).to.be();
    });

    it('should have the property standard (base name: "Standard")', function() {
      // uncomment below and update the code to test the property standard
      //var instane = new ProinApi.CpSpec();
      //expect(instance).to.be();
    });

    it('should have the property gageType (base name: "GageType")', function() {
      // uncomment below and update the code to test the property gageType
      //var instane = new ProinApi.CpSpec();
      //expect(instance).to.be();
    });

    it('should have the property valueType (base name: "ValueType")', function() {
      // uncomment below and update the code to test the property valueType
      //var instane = new ProinApi.CpSpec();
      //expect(instance).to.be();
    });

    it('should have the property precision (base name: "Precision")', function() {
      // uncomment below and update the code to test the property precision
      //var instane = new ProinApi.CpSpec();
      //expect(instance).to.be();
    });

    it('should have the property units (base name: "Units")', function() {
      // uncomment below and update the code to test the property units
      //var instane = new ProinApi.CpSpec();
      //expect(instance).to.be();
    });

    it('should have the property toleranceDefine (base name: "ToleranceDefine")', function() {
      // uncomment below and update the code to test the property toleranceDefine
      //var instane = new ProinApi.CpSpec();
      //expect(instance).to.be();
    });

    it('should have the property instruction (base name: "Instruction")', function() {
      // uncomment below and update the code to test the property instruction
      //var instane = new ProinApi.CpSpec();
      //expect(instance).to.be();
    });

    it('should have the property usl (base name: "Usl")', function() {
      // uncomment below and update the code to test the property usl
      //var instane = new ProinApi.CpSpec();
      //expect(instance).to.be();
    });

    it('should have the property lsl (base name: "Lsl")', function() {
      // uncomment below and update the code to test the property lsl
      //var instane = new ProinApi.CpSpec();
      //expect(instance).to.be();
    });

    it('should have the property M (base name: "M")', function() {
      // uncomment below and update the code to test the property M
      //var instane = new ProinApi.CpSpec();
      //expect(instance).to.be();
    });

    it('should have the property T (base name: "T")', function() {
      // uncomment below and update the code to test the property T
      //var instane = new ProinApi.CpSpec();
      //expect(instance).to.be();
    });

  });

}));
